/*
 * This file is generated by jOOQ.
 */
package com.projecki.fusion.sql.generated.tables.records;


import com.projecki.fusion.sql.generated.tables.PlayerSettings;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerSettingsRecord extends UpdatableRecordImpl<PlayerSettingsRecord> implements Record3<byte[], String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>settings.player_settings.uuid</code>.
     */
    public PlayerSettingsRecord setUuid(byte[] value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>settings.player_settings.uuid</code>.
     */
    public byte[] getUuid() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>settings.player_settings.namespace</code>.
     */
    public PlayerSettingsRecord setNamespace(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>settings.player_settings.namespace</code>.
     */
    public String getNamespace() {
        return (String) get(1);
    }

    /**
     * Setter for <code>settings.player_settings.id</code>.
     */
    public PlayerSettingsRecord setId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>settings.player_settings.id</code>.
     */
    public String getId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<byte[], String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<byte[], String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<byte[], String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<byte[]> field1() {
        return PlayerSettings.PLAYER_SETTINGS.UUID;
    }

    @Override
    public Field<String> field2() {
        return PlayerSettings.PLAYER_SETTINGS.NAMESPACE;
    }

    @Override
    public Field<String> field3() {
        return PlayerSettings.PLAYER_SETTINGS.ID;
    }

    @Override
    public byte[] component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getNamespace();
    }

    @Override
    public String component3() {
        return getId();
    }

    @Override
    public byte[] value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getNamespace();
    }

    @Override
    public String value3() {
        return getId();
    }

    @Override
    public PlayerSettingsRecord value1(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public PlayerSettingsRecord value2(String value) {
        setNamespace(value);
        return this;
    }

    @Override
    public PlayerSettingsRecord value3(String value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerSettingsRecord values(byte[] value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerSettingsRecord
     */
    public PlayerSettingsRecord() {
        super(PlayerSettings.PLAYER_SETTINGS);
    }

    /**
     * Create a detached, initialised PlayerSettingsRecord
     */
    public PlayerSettingsRecord(byte[] uuid, String namespace, String id) {
        super(PlayerSettings.PLAYER_SETTINGS);

        setUuid(uuid);
        setNamespace(namespace);
        setId(id);
    }

    /**
     * Create a detached, initialised PlayerSettingsRecord
     */
    public PlayerSettingsRecord(com.projecki.fusion.sql.generated.tables.pojos.PlayerSettings value) {
        super(PlayerSettings.PLAYER_SETTINGS);

        if (value != null) {
            setUuid(value.getUuid());
            setNamespace(value.getNamespace());
            setId(value.getId());
        }
    }
}
